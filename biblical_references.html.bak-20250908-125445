<!DOCTYPE html>

<html lang="en">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width,initial-scale=1" name="viewport"/>
<title>Bible References — Semitic Jew</title>
<link href="/israelite-research/styles.css" rel="stylesheet"/>
<style>
  :root{--ink:#0b2340;--accent:#F17300;--brand:#054A91;--muted:#6b7280;--sky:#DBE4EE;--white:#fff}
  body{background:#fff;color:var(--ink)}
  .container{max-width:1400px;margin:0 auto;padding:0 16px}

  /* Sticky top bar */
  .topbar{
    position:sticky; top:0; z-index:50;
    background:#fff; border-bottom:1px solid var(--sky);
  }
  .topbar-inner{
    display:flex; justify-content:space-between; align-items:center;
    padding:10px 16px;
  }
  .title{font-size:1.2rem; font-weight:800; margin:0}

  /* Two-pane layout */
  .layout{display:grid; grid-template-columns: 380px 1fr; gap:16px; margin:14px 0 32px}
  @media (max-width: 980px){ .layout{grid-template-columns:1fr} .panel-right{order:-1} }

  .panel{background:#fff; border:1px solid var(--sky); border-radius:10px}
  .panel h3{margin:10px 14px; font-size:1rem; color:var(--brand)}

  /* Results + facets */
  .facets{border-bottom:1px solid var(--sky); padding:10px 12px}
  .az{display:grid; grid-template-columns:repeat(13,1fr); gap:4px}
  .az button{border:1px solid var(--sky); background:#fff; border-radius:6px; padding:.3rem 0; font:inherit; cursor:pointer}
  .az button:hover{background:#f8fafc}

  .results{max-height:calc(100vh - 260px); overflow:auto; padding:8px 8px 12px}
  .card{border:1px solid var(--sky); border-radius:10px; padding:10px; margin:8px 4px; cursor:pointer; background:#fff}
  .card:hover{box-shadow:0 4px 12px rgba(0,0,0,.06)}
  .card .line1{display:flex; align-items:baseline; gap:.5rem}
  .card .term{font-weight:800}
  .card .abstract{margin-top:.25rem; font-size:.9rem; color:#374151}

  /* Reader */
  .reader{padding:10px 14px}
  .reader .head{display:flex; align-items:center; justify-content:space-between; gap:8px; border-bottom:1px solid var(--sky); padding-bottom:8px}
  .reader .r-title{margin:0; font-size:1.4rem; font-weight:800}
  .reader article{line-height:1.55; margin-top:10px}
  .cite{margin-top:16px; padding-top:8px; border-top:1px solid var(--sky); color:var(--muted); font-size:.9rem}
  .empty{padding:22px; color:var(--muted)}

  /* Right search toolbar */
  .r-toolbar{
    display:flex; gap:.5rem; align-items:center;
    margin-top:8px;
  }
  .r-toolbar input[type="search"]{
    flex:1; border:1px solid #e6ebf2; border-radius:8px; padding:.55rem .7rem; font:inherit;
  }
  .r-toolbar .btn{
    border:1px solid #e6ebf2; background:#fff; border-radius:8px; padding:.5rem .7rem; cursor:pointer;
  }
</style>
<style>.verse{position:relative;text-decoration:underline dotted;cursor:help;color:var(--brand);font-weight:600;}
.verse::after{content: attr(data-ref) " — " attr(data-note); position:absolute; left:0; bottom:120%; background:#ffffff; color:var(--ink); border:1px solid var(--border); padding:.45rem .6rem; font-size:.85rem; line-height:1.35; border-radius:8px; white-space:normal; width:min(360px,85vw); box-shadow:0 8px 20px rgba(0,0,0,.12); opacity:0; transform:translateY(4px); pointer-events:none; transition:opacity .12s ease, transform .12s ease; z-index:30;}
.verse:hover::after{opacity:1; transform:translateY(0);}</style></head>
<body class="bib-refs bib-refs">
<!-- Header include -->
<div data-include="partials/header.html" id="site-header"></div>
<div class="topbar">
<div class="topbar-inner container">
<h1 class="title">Bible References</h1>
</div>
</div>
<main class="container layout">
<!-- Left: results + facets -->
<section aria-label="Results and facets" class="panel panel-left">
<h3>Browse</h3>
<div class="facets">
<div aria-label="A–Z jump" class="az">
<!-- A–Z buttons injected by JS -->
</div>
</div>
<div aria-label="Search results" class="results" id="results" role="listbox">
<div class="empty">Type in the search or select an entry.</div>
</div>
</section>
<!-- Right: reader -->
<aside aria-label="Reading panel" class="panel panel-right">
<div class="reader" id="reader">
<div class="head">
<h2 class="r-title">Select an entry</h2>
<form autocomplete="off" class="r-toolbar" onsubmit="return false;">
<input aria-label="Search dictionaries" autocapitalize="off" autocomplete="off" autocorrect="off" id="q" name="q_bibrefs" placeholder="Search (e.g., sabbath, covenant, Zion, lemma:hesed)…" spellcheck="false" type="search"/>
<button class="btn" id="clearQ" type="button">Clear</button>
</form>
</div>
<article>
<div class="empty">Definitions will appear here when you select a result.</div>
</article>
</div>
</aside>
</main>
<!-- Footer include -->
<div data-include="partials/footer.html" id="site-footer"></div>
<script defer="" src="/israelite-research/js/theme.js"></script>
<script src="/israelite-research/js/include.js"></script>
<script>
    // Try multiple candidate paths so the dictionary loads regardless of hosting path depth
    const COMBINED_URLS = [
      "/israelite-research/data/dictionaries/_normalized/combined.json",
      "./data/dictionaries/_normalized/combined.json",
      "../data/dictionaries/_normalized/combined.json",
      "/data/dictionaries/_normalized/combined.json"
    ];
    const DB = [];
    let activeLetter = null;

    function normalizeCombined(row,i){
      const term = String(row.term||"").trim();
      const defs = Array.isArray(row.definitions)?row.definitions:[];
      const abstract = defs.length? String(defs[0]).slice(0,220):"";
      return { id:`${row.source}:${term}:${i}`, term, source:row.source, defs, abstract, letter:(term[0]||"#").toUpperCase() };
    }

    async function loadCombined(){
      let lastErr;
      for (const url of COMBINED_URLS){
        try{
          const res = await fetch(url,{cache:"no-store"});
          if(!res.ok) throw new Error("HTTP "+res.status);
          const arr = await res.json();
          DB.length=0;
          arr.forEach((r,i)=>{ if(r && r.term) DB.push(normalizeCombined(r,i)); });
          DB.sort((a,b)=> a.term.localeCompare(b.term));
          console.info("[bibrefs] loaded:", url, "entries:", DB.length);
          return; // success
        }catch(e){
          lastErr = e;
          console.warn("[bibrefs] failed:", url, e.message);
        }
      }
      console.error("Failed to load combined dictionary:", lastErr?.message || "unknown");
    }

    const resultsEl=document.getElementById('results');
    const readerEl=document.getElementById('reader');
    const azRoot=document.querySelector('.az');
    const q=document.getElementById('q');
    const clearQ=document.getElementById('clearQ');

    function renderResults(){
      const query=q.value.trim().toLowerCase();
      const hits=DB.filter(e=>{
        if(activeLetter && e.letter!==activeLetter) return false;
        if(query && !e.term.toLowerCase().includes(query)) return false;
        return true;
      }).slice(0,400);

      if(!hits.length){ resultsEl.innerHTML='<div class="empty">No results.</div>'; return; }
      const frag=document.createDocumentFragment();
      hits.forEach(e=>{
        const card=document.createElement('div');
        card.className='card';
        card.innerHTML=`<div class="line1"><div class="term">${escapeHtml(e.term)}</div></div>
                        <div class="abstract">${escapeHtml(e.abstract)}</div>`;
        card.addEventListener('click',()=>openEntry(e));
        frag.appendChild(card);
      });
      resultsEl.innerHTML='';
      resultsEl.appendChild(frag);
    }

    function openEntry(e){
      readerEl.querySelector('article').innerHTML = e.defs.map(d=>`<p>${escapeHtml(d)}</p>`).join('');
      readerEl.querySelector('.r-title').textContent = e.term;
    }

    function escapeHtml(s){ return String(s).replace(/[&<>"']/g,m=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])); }

    function debounce(fn,ms){ let t; return(...args)=>{ clearTimeout(t); t=setTimeout(()=>fn(...args),ms); }; }

    const doFilter=debounce(()=>renderResults(),120);
    q.addEventListener('input',doFilter);
    clearQ.addEventListener('click',()=>{ q.value=''; renderResults(); q.focus(); });
    q.setAttribute('autocomplete','off'); // safety

    // Build A–Z bar
    (function buildAZ(){
      const frag=document.createDocumentFragment();
      "ABCDEFGHIJKLMNOPQRSTUVWXYZ#".split("").forEach(ch=>{
        const b=document.createElement('button');
        b.textContent=ch;
        b.title="Jump to "+ch;
        b.addEventListener('click',()=>{ activeLetter=(ch==="#"?null:ch); renderResults(); });
        frag.appendChild(b);
      });
      azRoot.appendChild(frag);
    })();

    (async function(){ await loadCombined(); renderResults(); })();
  </script>
<script defer="True" src="/israelite-research/js/verses.js"></script></body>
</html>
